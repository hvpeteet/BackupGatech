(program let (declseg typedecls vardecls (funcdecls (funcdecl func foo ( params ) (optrettype : (type int)) begin (stmts (fullstmt (stmt (lvalue a_var (optoffset [ (numexpr (term (term (factor some_offset)) (nonlinop /) (factor some_value))) ])) := (numexpr (term (factor b_var [ (numexpr (term (factor some_value))) ])))) ;) (stmts (fullstmt (stmt if (boolexpr (clause (pred ( (boolexpr (clause (pred (numexpr (term (factor some_value))) (boolop <) (numexpr (term (factor some_other_value)))))) )))) then (stmts (fullstmt (stmt optstore some_func ( numexprs )) ;) (stmts (fullstmt (stmt (optstore (lvalue some_var optoffset) :=) some_other_func ( numexprs )) ;))) endif) ;))) end ;) funcdecls)) in (stmts (fullstmt (stmt (lvalue some_var optoffset) := (numexpr (term (factor some_other_var)))) ;)) end)
